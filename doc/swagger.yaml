swagger: "2.0"
info:
  description: "This present an API for basic example config in Rauther library."
  version: "1.0.0"
  title: "Rauther default API"

securityDefinitions:
  authtoken:
    type: apiKey
    name: Authorization
    in: header
    description: "User authorizes device with `/auth` request, and then adds `Authorization: Bearer <token>` header to every other request."

paths:
  /auth:
    post:
      consumes:
        - application/json
      description: Register device and returns token
      parameters:
        - description: Request body
          in: body
          name: body
          schema:
            $ref: "#/definitions/AuthRequest"
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/AuthResponse"
        "400":
          description: Bad Request
          schema:
            $ref: "#/definitions/ErrorResponse"
      tags:
        - auth

  /register:
    post:
      consumes:
        - application/json
      description: Register user
      parameters:
        - description: Request body
          in: body
          name: body
          schema:
            $ref: "#/definitions/SignUpRequest"
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/SignUpResponse"
        "400":
          description: Bad Request
          schema:
            $ref: "#/definitions/ErrorResponse"
        "401":
          description: Not auth. Auth token required
          schema:
            $ref: "#/definitions/ErrorResponse"
      tags:
        - auth
      security:
        - authtoken: []

  /register/check:
    post:
      consumes:
        - application/json
      summary: Check email/phone
      description: Check if email/phone is already registered.
      parameters:
        - description: Check login field
          in: body
          name: body
          schema:
            $ref: "#/definitions/CheckLoginFieldRequest"
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/CheckLoginFieldResponse"
        "400":
          description: Bad Request
          schema:
            $ref: "#/definitions/ErrorResponse"
        "401":
          description: Not auth. Auth token required
          schema:
            $ref: "#/definitions/ErrorResponse"
      tags:
        - auth
      security:
        - authtoken: []

  /login:
    post:
      consumes:
        - application/json
      description: Login user
      parameters:
        - description: Request body
          in: body
          name: body
          schema:
            $ref: "#/definitions/SignInRequest"
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/EmptyResponse"
        "400":
          description: Bad Request
          schema:
            $ref: "#/definitions/ErrorResponse"
        "401":
          description: Not auth. Auth token required
          schema:
            $ref: "#/definitions/ErrorResponse"
        "403":
          description: Incorrect password
          schema:
            $ref: "#/definitions/ErrorResponse"
      tags:
        - auth
      security:
        - authtoken: []

  /social/login:
    post:
      consumes:
        - application/json
      description: Social login user
      parameters:
        - description: Request body
          in: body
          name: body
          schema:
            $ref: "#/definitions/SocialSignInRequest"
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/SocialSignInResponse"
        "400":
          description: Bad Request
          schema:
            $ref: "#/definitions/ErrorResponse"
        "401":
          description: Not auth. Auth token required
          schema:
            $ref: "#/definitions/ErrorResponse"
      tags:
        - auth
      security:
        - authtoken: []

  /otp/{key}/code:
    post:
      consumes:
        - application/json
      description: Request code for
      parameters:
        - in: path
          name: key
          type: string
          required: true
          description: Method for send code (sms or telegram)
        - description: Request body
          in: body
          name: body
          schema:
            $ref: "#/definitions/OtpCodeRequest"
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/EmptyResponse"
        "400":
          description: Bad Request
          schema:
            $ref: "#/definitions/ErrorResponse"
        "401":
          description: Not auth. Auth token required
          schema:
            $ref: "#/definitions/ErrorResponse"
      tags:
        - auth
      security:
        - authtoken: []

  /otp/{key}/auth:
    post:
      consumes:
        - application/json
      description: Auth with OTP code
      parameters:
        - in: path
          name: key
          type: string
          required: true
          description: Method for send code (sms or telegram)
        - description: Request body
          in: body
          name: body
          schema:
            $ref: "#/definitions/OtpAuthRequest"
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/EmptyResponse"
        "400":
          description: Bad Request
          schema:
            $ref: "#/definitions/ErrorResponse"
        "401":
          description: Not auth. Auth token required
          schema:
            $ref: "#/definitions/ErrorResponse"
      tags:
        - auth
      security:
        - authtoken: []

  /logout:
    post:
      consumes:
        - application/json
      description: Logout user
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/SignOutResponse"
        "401":
          description: Not auth. Auth token required
          schema:
            $ref: "#/definitions/ErrorResponse"
      tags:
        - auth
      security:
        - authtoken: []

  /confirm:
    post:
      consumes:
        - application/json
      description: Confirmation user
      parameters:
        - description: Request body
          in: body
          name: body
          schema:
            $ref: "#/definitions/ConfirmRequest"
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/EmptyResponse"
        "400":
          description: Bad Request
          schema:
            $ref: "#/definitions/ErrorResponse"
      tags:
        - auth
      security:
        - authtoken: []

  /confirm/resend:
    post:
      consumes:
        - application/json
      description: Resend confirmation code
      parameters:
        - description: Request body
          in: body
          name: body
          schema:
            $ref: "#/definitions/ResendConfirmationRequest"
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/ResendConfirmationResponse"
        "400":
          description: Bad Request
          schema:
            $ref: "#/definitions/ErrorResponse"
        "401":
          description: Not auth. Auth token required
          schema:
            $ref: "#/definitions/ErrorResponse"
      tags:
        - auth
      security:
        - authtoken: []

  /recover:
    post:
      consumes:
        - application/json
      description: Send recovery code
      parameters:
        - description: Request body
          in: body
          name: body
          schema:
            $ref: "#/definitions/CodeRecoveryRequest"
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/CodeRecoveryResponse"
        "400":
          description: Bad Request
          schema:
            $ref: "#/definitions/ErrorResponse"
      tags:
        - auth
      security:
        - authtoken: []

  /recover/validate:
    post:
      consumes:
        - application/json
      description: Validate recovery code
      parameters:
        - description: Request body
          in: body
          name: body
          schema:
            $ref: "#/definitions/ValidateRecoveryCodeRequest"
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/RecoveryResponse"
        "400":
          description: Bad Request
          schema:
            $ref: "#/definitions/ErrorResponse"
      tags:
        - auth
      security:
        - authtoken: []

  /recover/reset:
    post:
      consumes:
        - application/json
      description: Send new credentials for user
      parameters:
        - description: Request body
          in: body
          name: body
          schema:
            $ref: "#/definitions/RecoveryRequest"
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/RecoveryResponse"
        "400":
          description: Bad Request
          schema:
            $ref: "#/definitions/ErrorResponse"
      tags:
        - auth
      security:
        - authtoken: []

  /profile:
    get:
      consumes:
        - application/json
      description: Get user info
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/ProfileResponse"
        "401":
          description: Authorized user required
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Internal error. User not found
          schema:
            $ref: "#/definitions/ErrorResponse"
      tags:
        - profile
      security:
        - authtoken: []
    post:
      consumes:
        - application/json
      description: Register device and returns token
      parameters:
        - description: Request body
          in: body
          name: body
          schema:
            $ref: "#/definitions/ProfileRequest"
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/ProfileResponse"
        "401":
          description: Authorized user required
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Internal error. User not found
          schema:
            $ref: "#/definitions/ErrorResponse"
      tags:
        - profile

definitions:
  Error:
    properties:
      code:
        type: string
      message:
        type: string
    type: object
  ErrorResponse:
    properties:
      error:
        $ref: "#/definitions/Error"
      result:
        example: false
        type: boolean
    type: object

  AuthRequest:
    properties:
      device_id:
        example: e01050dc-e834-4a61-826e-8dd592afb8ed
        type: string
    type: object

  AuthResponse:
    properties:
      result:
        example: true
        type: boolean
      token:
        example: 14d4f2e9-563d-4d57-9d1a-982a85f12fd8
        type: string
    type: object

  SignUpRequest:
    properties:
      type:
        type: string
        example: email
        enum:
          - email
          - phone
      email:
        example: example@mailer.com
        type: string
        description: required for type `email`
      phone:
        example: 79876543210
        type: string
        description: required for type `phone`
      password:
        example: mypass333example
        type: string
      name:
        type: string
        example: Name
    type: object
    required:
      - type
      - password
      - name

  SignUpResponse:
    properties:
      result:
        example: true
        type: boolean
      uid:
        example: example@mailer.com
        type: string
    type: object

  SignInRequest:
    properties:
      type:
        type: string
        example: email
        enum:
          - email
          - phone
      email:
        example: example@mailer.com
        type: string
        description: required for type `email`
      phone:
        example: 79876543210
        type: string
        description: required for type `phone`
      password:
        example: mypass333example
        type: string
    type: object
    required:
      - type
      - password

  SocialSignInRequest:
    type: object
    properties:
      type:
        type: string
        example: google
      token:
        type: string
        description: token from oauth service
    required:
      - token

  SocialSignInResponse:
    properties:
      result:
        example: true
        type: boolean
    type: object

  OtpCodeRequest:
    properties:
      phone:
        example: 79876543210
        type: string
  
  OtpAuthRequest:
    properties:
      phone:
        example: 79876543210
        type: string
      code:
        example: "1285"
        type: string

  CheckLoginFieldRequest:
    properties:
      type:
        type: string
        example: email
        enum:
          - email
          - phone
      email:
        example: example@mailer.com
        type: string
        description: required for type `email`
      phone:
        example: 79876543210
        type: string
        description: required for type `phone`
    type: object
    required:
      - type

  CheckLoginFieldResponse:
    properties:
      result:
        example: true
        type: boolean
    type: object

  SignOutResponse:
    properties:
      result:
        example: true
        type: boolean
      token:
        example: 14d4f2e9-563d-4d57-9d1a-982a85f12fd8
        type: string
    type: object

  ConfirmRequest:
    properties:
      type:
        type: string
        example: email
        enum:
          - email
          - phone
      uid:
        example: example@mailer.com
        type: string
      code:
        example: 14d4f2e9-563d-4d57-9d1a-982a85f12fd8
        type: string
    type: object
    required:
      - type
      - uid
      - code

  EmptyResponse:
    properties:
      result:
        example: true
        type: boolean
    type: object

  ResendConfirmationRequest:
    properties:
      type:
        type: string
        example: email
        enum:
          - email
          - phone
      uid:
        example: example@mailer.com
        type: string
    type: object
    required:
      - type
      - uid

  ResendConfirmationResponse:
    properties:
      result:
        example: true
        type: boolean
    type: object

  CodeRecoveryRequest:
    properties:
      type:
        type: string
        example: email
        enum:
          - email
          - phone
      uid:
        example: example@mailer.com
        type: string
    type: object
    required:
      - type
      - uid

  CodeRecoveryResponse:
    properties:
      result:
        example: true
        type: boolean
    type: object

  ValidateRecoveryCodeRequest:
    properties:
      type:
        type: string
        example: email
        enum:
          - email
          - phone
      uid:
        example: example@mailer.com
        type: string
      code:
        example: 14d4f2e9-563d-4d57-9d1a-982a85f12fd8
        type: string
    type: object
    required:
      - type
      - uid
      - code

  RecoveryRequest:
    properties:
      type:
        type: string
        example: email
        enum:
          - email
          - phone
      uid:
        example: example@mailer.com
        type: string
      code:
        example: 14d4f2e9-563d-4d57-9d1a-982a85f12fd8
        type: string
      password:
        example: my88new88pass
        type: string
    type: object
    required:
      - type
      - uid
      - code
      - password

  RecoveryResponse:
    properties:
      result:
        example: true
        type: boolean
    type: object

  ProfileRequest:
    type: object
    properties:
      username:
        type: string
        example: Name

  ProfileResponse:
    type: object
    properties:
      result:
        example: true
        type: boolean
      user:
        type: object
        properties:
          username:
            type: string
            example: Name
          auths:
            type: object
            properties:
              email:
                type: object
                properties:
                  type:
                    type: string
                    example: email
                  uid:
                    type: string
                    example: example@mailer.com
                  confirmed:
                    type: boolean
                    example: false
              phone:
                type: object
                properties:
                  type:
                    type: string
                    example: phone
                  uid:
                    type: string
                    example: 79876543210
                  confirmed:
                    type: boolean
                    example: false
